%h1=_ "Upload Articles"
%p
  %i
    =_ "Please check the parsed articles and choose a supplier at the end of page."
    %br/
    =_ "At the moment there is now checking of dublicate articles."

- form_tag(:action => 'create_articles_from_file') do
  %table.list
    %tr
      %th=_ "Number"
      %th=_ "Name"
      %th=_ "Note"
      %th=_ "Manufacturer"
      %th=_ "Origin"
      %th=_ "Unit"
      %th=_ "Net price"
      %th=_ "Tax"
      %th=_ "Deposit"
      %th=_ "Unit quantity"
      %th=_ "Category"
    - for @article in @articles
      %tr{:class => cycle('even', 'odd')}
        %td= text_field 'article[]', 'order_number', :size => 6
        %td= text_field 'article[]', 'name', :size => 0
        %td= text_field 'article[]', 'note', :size => 15
        %td= text_field 'article[]', 'manufacturer', :size => 6
        %td= text_field 'article[]', 'origin', :size => 6
        %td= text_field 'article[]', 'unit', :size => 5
        %td= text_field 'article[]', 'net_price', :size => 4
        %td= text_field 'article[]', 'tax', :size => 4
        %td= text_field 'article[]', 'deposit', :size => 4
        %td= text_field 'article[]', 'unit_quantity', :size => 4
        %td= select('article[]', 'article_category_id', ArticleCategory.find(:all).collect {|a| [ a.name, a.id ] })        
  %p
    =_ "Choose a supplier:"
    = select('supplier', 'id', Supplier.find(:all).collect {|s| [ s.name, s.id ] }, :selected => nil)
    = submit_tag _("Save articles")
  %p= link_to _("Back"), :action => 'upload_articles'
      